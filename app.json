[{"name": "app.py", "content": "from shiny import App, ui, render, reactive\nimport asyncio\n\napp_ui = ui.page_fluid(\n    ui.tags.head(\n        # Include Ruffle script from the CDN with proper type\n        ui.tags.script(\n            src=\"https://cdn.jsdelivr.net/npm/ruffle-nightly@latest/ruffle.js\",\n            type=\"text/javascript\"\n        ),\n    ),\n    ui.h2(\"ShinyLive Ruffle Integration\"),\n    ui.layout_sidebar(\n        ui.sidebar(\n            ui.input_select(\n                \"swf_file\",\n                \"Select SWF File\",\n                {\n                    \"PM.swf\": \"PM\",\n                    # Add more SWF files here if needed\n                },\n            ),\n            ui.input_action_button(\"load_swf\", \"Load SWF\"),\n        ),\n            ui.output_ui(\"swf_container\")\n    ),\n    # Inject JavaScript code to initialize Ruffle\n    ui.tags.script(\"\"\"\n    window.loadSWF = async function(swf_url) {\n        // Wait for Ruffle to be ready\n        if (!window.rufflePlayer) {\n            await new Promise((resolve) => {\n                const checkRuffle = setInterval(() => {\n                    if (window.RufflePlayer) {\n                        window.rufflePlayer = window.RufflePlayer.newest();\n                        clearInterval(checkRuffle);\n                        resolve();\n                    }\n                }, 100);\n            });\n        }\n        \n        console.log(\"loadSWF called with URL:\", swf_url);\n        if (window.player) {\n            window.player.remove();\n        }\n        const container = document.getElementById(\"swf-player\");\n        window.player = window.rufflePlayer.createPlayer();\n        container.appendChild(window.player);\n        window.player.load(swf_url);\n    };\n\n    // Add Shiny message handler\n    Shiny.addCustomMessageHandler(\"loadSWF\", function(swf_url) {\n        window.loadSWF(swf_url);\n    });\n    \"\"\", type=\"text/javascript\"),\n)\n\ndef server(input, output, session):\n    @render.ui\n    def swf_container():\n        return ui.HTML(\"<div id='swf-player'></div>\")\n\n    @reactive.effect\n    @reactive.event(input.load_swf)\n    async def _():\n        swf_file = input.swf_file()\n        from urllib.parse import quote\n        encoded_file = quote(swf_file)\n        swf_url = f\"https://mklimstra.github.io/Biomech-tutor/swf/{encoded_file}\"\n        await session.send_custom_message(\"loadSWF\", swf_url)\n\napp = App(app_ui, server)\n", "type": "text"}]